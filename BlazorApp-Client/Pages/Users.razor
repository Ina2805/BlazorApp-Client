@page "/users"
@using BlazorApp_Client.Models
@using BlazorApp_Client.Service
@inject UserService UserService
@inject NavigationManager NavigationManager

<h3>Users</h3>

@if (users == null)
{
    <p>Loading...</p>
}
else if (users.Count == 0)
{
    <p>No users found.</p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>User ID</th>
            <th>User Name</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var user in users)
        {
            <tr>
                <td>@user.userId</td>
                <td>@user.userName</td>
                <td>
                    <button class="btn btn-primary btn-sm" @onclick="() => EditUser(user)">Edit</button>
                    <button class="btn btn-danger btn-sm" @onclick="() => DeleteUser(user.userId)">Delete</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

<div>
    <button class="btn btn-success" @onclick="NavigateToAddUserPage">Add User</button>
</div>

@code {
    private List<User> users = new List<User>();
    private UserService userService;
    private NavigationManager navigationManager;


    protected override async Task OnInitializedAsync()
    {
        userService = new UserService(); // Instantiate your service here
    // Initialize user list from the database
        users = await userService.GetAllUsers();
    }

    private async void EditUser(User user)
    {
        NavigationManager.NavigateTo($"/edituser/{user.userId}");

    }

    private async Task DeleteUser(string userId)
    {
    // Call the user service or data access layer to delete the user
        bool success = await userService.DeleteUser(userId);

        if (success)
        {
    // Remove the deleted user from the user list
            //var userToDelete = users.FirstOrDefault(u => u.userId == userId);
            if (success)
            {
                users.RemoveAll(user => user.userId == userId);
            }
            
        }
    }

    private void NavigateToAddUserPage()
    {
        NavigationManager.NavigateTo("/adduser");
    }
}